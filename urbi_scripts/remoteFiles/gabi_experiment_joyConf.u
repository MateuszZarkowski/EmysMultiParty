/*
* Initialize JoystickActions
*
*
*  Author: Jan Kedzierski
*  Date: 27.02.2012
*  Ver: 2.3
*/


////////////////////
//
 if (!hasSlot("j_togg1")) {var Global.j_togg1=1;} else {Global.j_togg1=1;};
 if (!hasSlot("j_togg2")) {var Global.j_togg2=1;} else {Global.j_togg2=1;};
 if (!hasSlot("j_tag1")) var Global.j_tag1=Tag.new;
//
////////////////////

 
/////////////////////////////////////////////////////////////
//
// Pad from PS3 (WIN32)
//
/////////////////////////////////////////////////////////////
//
//	||7			 ||6
//	||5			 ||4
//
//	11			 3
//	()			 ()
//  8()    ()10	||15	|>12 0()    ()2
//	()			 ()
//	 9			  1
//	     |	14	13 |
//     axis1 |  ()	() | axis4
//	     ------>       ------->
//	      axis0	     axis2
//     
      if (joystick.name=="PPJoy Virtual Joystick 1"){
		
	////////////////////////////////////////////////////////////
	// axis
	////////////////////////////////////////////////////////////
	
	joystick.&axis4.notifyChange( closure() {
	  if ((joystick.axis4 > 2000 )||(joystick.axis4 < - 2000 )) {robot.body.x.speed=-((robot.body.x.speed->rangemax*joystick.axis4)/32768);} 
	  else {robot.body.x.speed=0;};
	});
	
	joystick.&axis2.notifyChange( closure() {
	  if ((joystick.axis2 > 2000 )||(joystick.axis2 < - 2000 )) {robot.body.yaw.speed=-((robot.body.yaw.speed->rangemax*joystick.axis2)/32768);} 
	  else {robot.body.yaw.speed=0;};
	});
	
	joystick.&axis0.notifyChange( closure() {
	  if (Global.j_togg2==0) {
	    if ((joystick.axis0 > 2000 )||(joystick.axis0 < - 2000 ))  {
	      if (joystick.axis0 > 2000 ) robot.body.neck.head.MoveRight(((joystick.axis0- 2000)/3276),0.01);
	      if (joystick.axis0 <-2000 ) robot.body.neck.head.MoveLeft((-(joystick.axis0+ 2000)/3276),0.01);
	    } else { robot.body.neck.head.MoveLeft(0,0.001); };
	  };
	});
	
	joystick.&axis1.notifyChange( closure() {
	  if (Global.j_togg2==0) {
	    if ((joystick.axis1 > 2000 )||(joystick.axis1 < - 2000 )) {
	      if (j_togg1){
		if (joystick.axis1 > 2000 ) robot.body.neck.head.MoveDown(((joystick.axis1- 2000)/5000),0.01);
		if (joystick.axis1 <-2000 ) robot.body.neck.head.MoveUp((-(joystick.axis1+ 2000)/4000),0.01);
	      } else {
		if (joystick.axis1 > 2000 ) robot.body.neck.head.MoveUp(((joystick.axis1- 2000)/4000),0.01);
		if (joystick.axis1 <-2000 ) robot.body.neck.head.MoveDown(((-joystick.axis1+ 2000)/5000),0.01);
	      }
	    } else { robot.body.neck.head.MoveUp(0,0.001); };
	  };
	});
	
	////////////////////////////////////////////////////////////
	// buttons
	////////////////////////////////////////////////////////////

	
	/////////////////////////
	
	joystick.&button0.notifyChange( closure() {
	  if (joystick.button0 ==1)   
	   {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	    Global.j_togg2=1;
	    robot.BehaveComeOn(3);
	    }),
	  };
	});

	
	joystick.&button1.notifyChange( closure() {
	  if (joystick.button1 ==1)  
	   {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	     robot.body.neck.head.BehaveNormal(2);
	    }),
	  };
	});
	
	joystick.&button2.notifyChange( closure() {
	  if (joystick.button2 ==1)   
	   {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	    Global.j_togg2=1;
	    robot.body.neck.head.MoveUp(4,1) & 
	    robot.body.neck.head.MoveLeft(4,1); 
	    sleep(1);
	    robot.body.neck.head.MoveAt(-60,25,1);
	    }),
	  };
	});
	
			
	joystick.&button3.notifyChange( closure() {
	  if (joystick.button3 ==1)    
	   {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	    robot.body.neck.head.ExpSmile(10,1);
	    }),
	  };
	});
	
		
	joystick.&button4.notifyChange( closure() {
	  if (joystick.button4 ==1)
	   {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	      robot.body.neck.head.m_RBlink(0.3);
	    }),
	  };
	});
	

	
	joystick.&button5.notifyChange( closure() {
	  if (joystick.button5 ==1) 
	   {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	      robot.body.neck.head.m_LBlink(0.3);
	    }),
	  };
	});
	

		
	joystick.&button6.notifyChange( closure() {
	  if (joystick.button6 == 1)   
	   {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	      robot.body.neck.head.Say(_uFilesDir+"speech_sequences/_Krzysiek_001_Prosze_sie_poczestowac",4)
	    }),
	  };
	});
	
			
	joystick.&button7.notifyChange( closure() {
	  if (joystick.button7 == 1)   
	   {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	      robot.body.neck.head.Say(_uFilesDir+"speech_sequences/_Krzysiek_002_Prosze",4)
	    }),
	  };
	});
	
		////////////////////
	
	joystick.&button8.notifyChange( closure() {
	  if (joystick.button8 ==1)
	   {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	      robot.body.arm[right].MoveForward(3) &  
	      robot.body.arm.hand.MoveOpen(3);
	    }),
	  };
	
	});
	
		
	joystick.&button9.notifyChange( closure() {
	  if (joystick.button9 ==1)  
	   {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	    robot.body.neck.head.BehaveNormal(2)&
	    robot.body.arm.MoveDown(2) & 
	    robot.body.arm[right].hand.MoveClose(8,2);
	    }),
	  };
	});
	
	joystick.&button10.notifyChange( closure() {
	  if (joystick.button10 ==1) 
	   {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	      robot.body.arm[right].hand.MoveClose(8,2);
	    }),
	  };

	});
	
			
	joystick.&button11.notifyChange( closure() {
	  if (joystick.button11 ==1)  
	   {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	    Global.j_togg2=1;
	    robot.body.neck.head.MoveAt(-60,25,2)&
	    robot.body.arm[right].MoveUpSide(2)& 
	    robot.body.arm[right].hand.MovePoint(2);
	    }),
	  };
	});
	
			
	joystick.&button12.notifyChange( closure() {
	  if (joystick.button12 ==1) {
	    j_tag1.stop;
	    robot.audio.player.stop;
	    j_tag1:detach({
	      robot.body.arm.MoveReset(3);
	    }),
	  };
	});


	
	joystick.&button14.notifyChange( closure() {
	  if (joystick.button14 == 1) {Global.j_togg2=0;};
	});	

			
	joystick.&button15.notifyChange( closure() {
	  if (joystick.button15 == 1) {Global.j_togg1=!Global.j_togg1;};
	});
	
	
      };
      

/////////////////////////////////////////////////////////////
//
// Pad from PS3 (LINUX)
//
/////////////////////////////////////////////////////////////
//
//	||8			 ||9
//	||10			 ||11
//
//	 4			 12
//	()			 ()
//  7()    ()5	||0	|>3 15()    ()13
//	()			 ()
//	 6	    ()16	 14
//	     |	1	2  |
//     axis1 |  ()	() | axis3
//	     ------>       ------->
//	      axis0	     axis2
// 
      
      if (joystick.name=="PLAYSTATION(R)3 Controller (00:06:F7:10:9C:51)"){
	
 

      };
      
